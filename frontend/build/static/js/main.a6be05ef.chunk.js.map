{"version":3,"sources":["logo.svg","constants/userConstants.js","components/Header.js","actions/userActions.js","constants/imageConstants.js","components/Loader.js","components/Message.js","components/HomeScreen.js","actions/imageActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","App.js","reportWebVitals.js","store.js","reducers/imageReducer.js","reducers/userReducers.js","index.js"],"names":["USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","Container","to","Brand","alt","src","logo","width","height","className","Toggle","Collapse","Text","email","Button","onClick","localStorage","removeItem","type","document","location","href","USER_IMAGES_REQUEST","USER_IMAGES_SUCCESS","USER_IMAGES_FAIL","USER_IMAGES_UPLOAD_REQUEST","USER_IMAGES_UPLOAD_SUCCESS","USER_IMAGES_UPLOAD_FAIL","Loader","Spinner","animation","role","style","margin","display","Message","children","Alert","defaultProps","HomeScreen","history","useState","filename","setFilename","msg","setMsg","file1","setFile","upload","setUpload","imageList","loading","images","error","useEffect","console","log","_id","getState","a","axios","get","params","userid","isAdmin","data","sort","b","Date","created","getTime","reverse","payload","response","message","submitHandler","e","preventDefault","file","formData","FormData","append","config","headers","post","then","catch","undefined","handleFile","target","files","name","Row","Col","Form","encType","onSubmit","File","id","label","custom","onChange","aria-label","length","map","image","sm","md","lg","xl","Image","imageURL","thumbnail","fluid","FormContainer","xs","LoginScreen","setEmail","password","setPassword","redirect","search","split","push","setItem","JSON","stringify","login","Group","controlId","Label","Control","placeholder","value","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","userRegister","registerAction","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducuer","combineReducers","action","imageUpload","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a6be05ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\n","import React from 'react'\r\nimport { Navbar, Container, Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport logo from '../logo.svg'\r\nimport { logout } from '../actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header>\r\n\t\t\t\t<Navbar bg='dark' variant='dark'>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<LinkContainer to='/'>\r\n\t\t\t\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt=''\r\n\t\t\t\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\t\t\t\twidth='50'\r\n\t\t\t\t\t\t\t\t\theight='50'\r\n\t\t\t\t\t\t\t\t\tclassName='d-inline-block'\r\n\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\tPhotogram\r\n\t\t\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t<Navbar.Toggle />\r\n\t\t\t\t\t\t{userInfo ? <Navbar.Collapse className='justify-content-around'>\r\n\t\t\t\t\t\t\t<Navbar.Text>Signed in as: {`${userInfo.email}`}</Navbar.Text>\r\n\t\t\t\t\t\t\t<Navbar.Text><Button onClick={logoutHandler}>Logout</Button></Navbar.Text>\r\n\t\t\t\t\t\t</Navbar.Collapse> : ''}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</header>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import { USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGIN_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_LOGOUT } from '../constants/userConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nconst registerAction = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/users/create', { email, password }, config)\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('photpAppLoginUser', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('photpAppLoginUser', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n\r\n}\r\nconst logout = () => (dispatch) => {\r\n    localStorage.removeItem('photpAppLoginUser')\r\n    dispatch({ type: USER_LOGOUT })\r\n    document.location.href = '/login'\r\n}\r\nexport { login, logout, registerAction }","export const USER_IMAGES_REQUEST = 'USER_IMAGES_REQUEST'\r\nexport const USER_IMAGES_SUCCESS = 'USER_IMAGES_SUCCESS'\r\nexport const USER_IMAGES_FAIL = 'USER_IMAGES_FAIL'\r\n\r\nexport const USER_IMAGES_UPLOAD_REQUEST = 'USER_IMAGES_UPLOAD_REQUEST'\r\nexport const USER_IMAGES_UPLOAD_SUCCESS = 'USER_IMAGES_UPLOAD_SUCCESS'\r\nexport const USER_IMAGES_UPLOAD_FAIL = 'USER_IMAGES_UPLOAD_FAIL'\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<Spinner\r\n\t\t\tanimation='border'\r\n\t\t\trole='status'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100px',\r\n\t\t\t\theight: '100px',\r\n\t\t\t\tmargin: 'auto',\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span className='sr-only'>Loading...</span>\r\n\t\t</Spinner>\r\n\t)\r\n}\r\n\r\nexport default Loader\r\n","import React, { Children } from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n\treturn (\r\n\t\t<Alert variant={variant} style={{ width: '100%' }}>\r\n\t\t\t{children}\r\n\t\t</Alert>\r\n\t)\r\n}\r\n\r\nMessage.defaultProps = {\r\n\tvariant: 'info',\r\n}\r\nexport default Message\r\n","import { React, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllImages, uploadImage } from '../actions/imageActions'\r\nimport { Container, Image, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport axios from 'axios'\r\nimport { motion } from 'framer-motion';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nconst HomeScreen = ({ history }) => {\r\n\tconst [filename, setFilename] = useState('Select an image to upload...')\r\n\tconst [msg, setMsg] = useState('')\r\n\tconst [file1, setFile] = useState(null)\r\n\tconst [upload, setUpload] = useState('')\r\n\tconst dispatch = useDispatch()\r\n\tconst imageList = useSelector((state) => state.imageList)\r\n\tconst { loading, images, error } = imageList\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\tconsole.log('====================================');\r\n\t\t\tconsole.log(userInfo);\r\n\t\t\tconsole.log('====================================');\r\n\t\t\tdispatch(getAllImages(userInfo._id))\r\n\t\t}\r\n\t}, [dispatch, history, upload])\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst file = file1\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('image', file)\r\n\t\tformData.append('userid', userInfo._id)\r\n\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'multipart/form-data',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t\t// console.log(await axios.post('/api/upload', formData, config));\r\n\t\t\tawait axios.post('/api/upload', formData, config)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t\tsetUpload(response.data)\r\n\t\t\t\t\t// setUpload(response.data)\r\n\t\t\t\t\tsetMsg('')\r\n\t\t\t\t\tsetFilename('Select an image to upload...')\r\n\t\t\t\t\tsetFile(null)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tif (error && error.response && error.response.data[\"Error\"] !== undefined) {\r\n\t\t\t\t\t\tsetMsg(error.response.data[\"Error\"])\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetMsg('Images only!')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\tconst handleFile = async (e) => {\r\n\t\tif (e.target.files[0]) {\r\n\t\t\tsetFilename(e.target.files[0].name)\r\n\t\t\tsetFile(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!userInfo && <div className=\"d-flex justify-content-center align-items-center\">Please &nbsp;<Link to='/login'>sign in</Link>&nbsp;to see your stuff!</div>}\r\n\t\t\t{ userInfo && <Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form encType=\"multipart/form-data\" onSubmit={submitHandler}>\r\n\t\t\t\t\t\t<div className='d-flex flex-column align-items-center'>\r\n\t\t\t\t\t\t\t<div className='d-flex w-100'>\r\n\t\t\t\t\t\t\t\t<div className='input-group'>\r\n\t\t\t\t\t\t\t\t\t<Form.File\r\n\t\t\t\t\t\t\t\t\t\tid='custom-file'\r\n\t\t\t\t\t\t\t\t\t\tlabel={filename}\r\n\t\t\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\t\t\tclassName='w-80'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleFile}\r\n\t\t\t\t\t\t\t\t\t\tclassName='w-50'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button variant='outline' className='btn-outline-primary w-20' type='submit'><i className=\"fa fa-upload\" aria-label='upload' alt='upload'></i></Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='mt-3'>\r\n\t\t\t\t\t\t\t\t{msg !== '' ? <Message variant='danger'>{msg}</Message> : ''}\r\n\t\t\t\t\t\t\t\t{/* <Button>Error</Button> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>}\r\n\t\t\t{ userInfo && <Row className='py-3 px-4'>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t) : error ? (\r\n\t\t\t\t\t<Message variant='danger'>{error}</Message>\r\n\t\t\t\t) : images.length === 0 ? <Message variant='danger'>No Images found</Message> : (\r\n\t\t\t\t\timages.map((image) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={image.imageURL}\r\n\t\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\txl={3}\r\n\t\t\t\t\t\t\t\tclassName='py-2'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SRLWrapper>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tsrc={image.imageURL}\r\n\t\t\t\t\t\t\t\t\t\tthumbnail\r\n\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\tclassName='img-fluid'\r\n\t\t\t\t\t\t\t\t\t// style={{ height: '250px', width: '250px' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SRLWrapper>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t)}\r\n\t\t\t</Row>}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default HomeScreen\r\n","import { BlobServiceClient } from '@azure/storage-blob'\r\n\r\nimport axios from 'axios'\r\nimport {\r\n\tUSER_IMAGES_REQUEST,\r\n\tUSER_IMAGES_SUCCESS,\r\n\tUSER_IMAGES_FAIL,\r\n\tUSER_IMAGES_UPLOAD_FAIL,\r\n\tUSER_IMAGES_UPLOAD_REQUEST,\r\n\tUSER_IMAGES_UPLOAD_SUCCESS,\r\n} from '../constants/imageConstants'\r\n// import { InteractiveBrowserCredential } from '@azure/identity'\r\n// we're using these objects from the storage sdk - there are others for different needs\r\n// import { BlobServiceClient, BlobItem } from '@azure/storage-blob'\r\n\r\nconst getAllImages = (id) => async (dispatch, getState) => {\r\n\t// let blobsWeFound = []\r\n\t// let containerUrl = ''\r\n\ttry {\r\n\t\tdispatch({ type: USER_IMAGES_REQUEST })\r\n\t\t//console.log(await axios.get('/api/getimages'))\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\t\tconst { data } = await axios.get('/api/getimages', {\r\n\t\t\tparams: {\r\n\t\t\t\tuserid: userInfo._id,\r\n\t\t\t\tisAdmin: userInfo.isAdmin\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst images = data.images\r\n\t\timages.sort(\r\n\t\t\t(a, b) => new Date(a.created).getTime() - new Date(b.created).getTime()\r\n\t\t)\r\n\t\timages.reverse()\r\n\t\t// console.log(data.blobImages)\r\n\t\tdispatch({\r\n\t\t\ttype: USER_IMAGES_SUCCESS,\r\n\t\t\tpayload: images,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_IMAGES_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\nconst uploadImage = (formdata) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t},\r\n\t\t}\r\n\t\tdispatch({ type: USER_IMAGES_UPLOAD_REQUEST })\r\n\t\tconsole.log(formdata);\r\n\t\tawait axios.post('/api/putimage', formdata, config)\r\n\t\tdispatch({\r\n\t\t\ttype: USER_IMAGES_UPLOAD_SUCCESS,\r\n\t\t\tpayload: [{ imagesrc: 'https://picsum.photos/200' }],\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_IMAGES_UPLOAD_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport { uploadImage, getAllImages }\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nexport const LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n\t\t\t\t</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n\t\t\t\t\t</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { registerAction } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(registerAction(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n        </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n          </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import logo from './logo.svg'\nimport Header from './components/Header'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './components/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<main className='py-3'>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Route path='/' component={HomeScreen} exact />\n\t\t\t\t\t\t<Route path='/login' component={LoginScreen} exact />\n\t\t\t\t\t\t<Route path='/register' component={RegisterScreen} exact />\n\t\t\t\t\t</Container>\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n\tgetAllImagesReducer,\r\n\tuploadImagesReducer,\r\n} from './reducers/imageReducer'\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserRegisterReducer,\r\n\r\n} from './reducers/userReducers'\r\n\r\nconst reducuer = combineReducers({\r\n\timageList: getAllImagesReducer,\r\n\timageUpload: uploadImagesReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\r\n})\r\nconst userFromLocalStorage = localStorage.getItem('photpAppLoginUser')\r\n\t? JSON.parse(localStorage.getItem('photpAppLoginUser'))\r\n\t: null\r\n\r\nconst initialState = {\r\n\tuserLogin: {\r\n\t\tuserInfo: userFromLocalStorage,\r\n\t},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n\treducuer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n\tUSER_IMAGES_REQUEST,\r\n\tUSER_IMAGES_SUCCESS,\r\n\tUSER_IMAGES_FAIL,\r\n\tUSER_IMAGES_UPLOAD_REQUEST,\r\n\tUSER_IMAGES_UPLOAD_SUCCESS,\r\n\tUSER_IMAGES_UPLOAD_FAIL,\r\n} from '../constants/imageConstants'\r\n\r\nconst getAllImagesReducer = (state = { images: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_IMAGES_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t}\r\n\t\tcase USER_IMAGES_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\timages: action.payload,\r\n\t\t\t}\r\n\t\tcase USER_IMAGES_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nconst uploadImagesReducer = (state = { image: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_IMAGES_UPLOAD_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t}\r\n\t\tcase USER_IMAGES_UPLOAD_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\timage: action.payload,\r\n\t\t\t}\r\n\t\tcase USER_IMAGES_UPLOAD_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport { getAllImagesReducer, uploadImagesReducer }\r\n","import { USER_LOGOUT, USER_DETAILS_RESET, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGIN_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST } from '../constants/userConstants'\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store'\nimport SimpleReactLightbox from 'simple-react-lightbox'\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<SimpleReactLightbox>\n\t\t\t<App />\n\t\t</SimpleReactLightbox>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}